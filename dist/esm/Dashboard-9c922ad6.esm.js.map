{"version":3,"file":"Dashboard-9c922ad6.esm.js","sources":["../../src/components/Dashboard.tsx"],"sourcesContent":["/*\n * Copyright 2023 Zenika\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { InfoCard, Progress, WarningPanel } from '@backstage/core-components';\nimport { makeStyles } from '@material-ui/core';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport { configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { getZnkGrafanaConfiguration } from '../plugin';\n\nconst useStyles = makeStyles(theme => ({\n  infoCard: {\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport const Dashboard = () => {\n  const classes = useStyles();\n  const { entity } = useEntity();\n  const [dash, setDash] = useState(<Progress />);\n  const config = useApi(configApiRef);\n\n  useEffect(() => {\n    fetch(\n      `${config.getString(\n        'backend.baseUrl',\n      )}/api/znkGrafana/snap?${new URLSearchParams({\n        conf: getZnkGrafanaConfiguration(entity),\n      })}`,\n    )\n      .then(response => response.json())\n      .then(json => {\n        if (json.snapshots)\n          setDash(\n            <>\n              {json.snapshots.map((i: string, c: number) => (\n                <img\n                  key={`snap${c}`}\n                  src={`data:image/png;base64,${i}`}\n                  alt={`snap${c}`}\n                />\n              ))}\n            </>,\n          );\n        else\n          setDash(\n            <WarningPanel\n              title=\"Failed to fetch snapshots\"\n              message={json.message}\n            />,\n          );\n      });\n  }, [config, entity]);\n\n  return (\n    <InfoCard title=\"Grafana\" className={classes.infoCard}>\n      {dash}\n    </InfoCard>\n  );\n};\n"],"names":[],"mappings":";;;;;;;AAuBA,MAAM,SAAA,GAAY,WAAW,CAAU,KAAA,MAAA;AAAA,EACrC,QAAU,EAAA;AAAA,IACR,YAAA,EAAc,KAAM,CAAA,OAAA,CAAQ,CAAC,CAAA;AAAA,GAC/B;AACF,CAAE,CAAA,CAAA,CAAA;AAEK,MAAM,YAAY,MAAM;AAC7B,EAAA,MAAM,UAAU,SAAU,EAAA,CAAA;AAC1B,EAAM,MAAA,EAAE,MAAO,EAAA,GAAI,SAAU,EAAA,CAAA;AAC7B,EAAA,MAAM,CAAC,IAAM,EAAA,OAAO,IAAI,QAAS,iBAAA,KAAA,CAAA,aAAA,CAAC,cAAS,CAAE,CAAA,CAAA;AAC7C,EAAM,MAAA,MAAA,GAAS,OAAO,YAAY,CAAA,CAAA;AAElC,EAAA,SAAA,CAAU,MAAM;AACd,IAAA,KAAA;AAAA,MACE,GAAG,MAAO,CAAA,SAAA;AAAA,QACR,iBAAA;AAAA,OACD,CAAwB,qBAAA,EAAA,IAAI,eAAgB,CAAA;AAAA,QAC3C,IAAA,EAAM,2BAA2B,MAAM,CAAA;AAAA,OACxC,CAAC,CAAA,CAAA;AAAA,KACJ,CACG,KAAK,CAAY,QAAA,KAAA,QAAA,CAAS,MAAM,CAAA,CAChC,KAAK,CAAQ,IAAA,KAAA;AACZ,MAAA,IAAI,IAAK,CAAA,SAAA;AACP,QAAA,OAAA;AAAA,oEAEK,IAAK,CAAA,SAAA,CAAU,GAAI,CAAA,CAAC,GAAW,CAC9B,qBAAA,KAAA,CAAA,aAAA;AAAA,YAAC,KAAA;AAAA,YAAA;AAAA,cACC,GAAA,EAAK,OAAO,CAAC,CAAA,CAAA;AAAA,cACb,GAAA,EAAK,yBAAyB,CAAC,CAAA,CAAA;AAAA,cAC/B,GAAA,EAAK,OAAO,CAAC,CAAA,CAAA;AAAA,aAAA;AAAA,WAEhB,CACH,CAAA;AAAA,SACF,CAAA;AAAA;AAEA,QAAA,OAAA;AAAA,0BACE,KAAA,CAAA,aAAA;AAAA,YAAC,YAAA;AAAA,YAAA;AAAA,cACC,KAAM,EAAA,2BAAA;AAAA,cACN,SAAS,IAAK,CAAA,OAAA;AAAA,aAAA;AAAA,WAChB;AAAA,SACF,CAAA;AAAA,KACH,CAAA,CAAA;AAAA,GACF,EAAA,CAAC,MAAQ,EAAA,MAAM,CAAC,CAAA,CAAA;AAEnB,EAAA,2CACG,QAAS,EAAA,EAAA,KAAA,EAAM,WAAU,SAAW,EAAA,OAAA,CAAQ,YAC1C,IACH,CAAA,CAAA;AAEJ;;;;"}